var todoLists = {}//local storage'dan okuma

function writeToLocal() {
  localStorage.setItem('todos', JSON.stringify(todoLists))//local storage'a yazdÄ±rma
}

$(document).ready(function () //this code checks if there is data stored in the localStorage under the key 'todos'. If there is, it will parse the data and store it in the todoLists variable. If there isn't, it will set the todoLists variable to an empty object.
{
  var items = localStorage.getItem('todos')
  if (items) 
  {
    todoLists = JSON.parse(items)
  }

  render();//showing the output in the browser
  $(document).on('click', '#add-task-button', function () //#add-task-button id'sine click eventi ekleme
  {
    createTask();
  })

  $(document).on('click', '.todo-checkbox', function (event) {
    event.stopPropagation();//event'in diÄŸer elementlere yayÄ±lmasÄ±nÄ± engeller
    checkTask($(this).parent());//parent'Ä± li olan elementi checkTask fonksiyonuna gÃ¶nderir
  })

  $(document).on('click', '.trash-button', function (event) 
  {
    event.stopPropagation();
    delete todoLists[$(this).parent().parent().attr('data-name')]
    activeTab = 'members'
    render();
  })

  $(document).on('click', '.todo-item', function (el, val) {
    $(this).find('.todo-checkbox').attr('checked', !$(this).find('.todo-checkbox').attr('checked'))
    checkTask($(this));
  })

  $(document).on('keypress', '#add-task-input', function (e) //enter'a basÄ±nca task oluÅŸturma
  {
    if (e.keyCode == 13) {
      createTask();
    }
  });

  $(document).on('keypress', '#new-list-input', function (e) //enter'a basÄ±nca liste oluÅŸturma
  {
    if (e.keyCode == 13) //
    {
      createList()
    }
  });

  $('#new-list-button').click(function () 
  {
    $('#new-list-modal').show(); 
    $('#new-list-input').focus();
  })

  $('.cancel').click(function () {
    $('#new-list-modal').hide();
  })

  $('.create').click(function () {
    createList()
  })

  $('.project-members').click(function () {
    $('.right-panel').html(`<div class="projectmembers">
        <p id="star2">&#9734</p>
        <p>Project Members</p>
      </div>
      <div id="students">
        <div class="person">
          <img src="images/can.jpg">
          <div>
            <span>Mustafacan DaÅŸdemir</span>
            <p>Id: 21903303</p>
            <p>Section: 2</p><br>
          </div>
        </div>
        <div class="person">
          <img src="images/ceren.jpeg">
          <div>
            <span>Ceren KoÃ§ak</span>
            <p>Id: 22103619</p>
            <p>Section: 2</p><br>
          </div>
        </div>
    
        <div class="person">
          <img src="./images/fettah.jpeg">
          <div>
            <span>Fettah ElÃ§ik</span>
            <p>Id: 21903182</p>
            <p>Section: 2</p><br>
          </div>
        </div>
        <div class="person">
          <img src="./images/sude.jpeg">
          <div>
            <span>Sude Ayaz</span>
            <p>Id: 22103619</p>
            <p>Section: 2</p>
          </div>
        </div>
    
      </div>`)
  })

  $(document).on('click', '#left-list li.list-item', function () {
    var name = $(this).attr('data-name');//data-name attribute'una sahip elementin deÄŸerini alÄ±r
    activeTab = name;
    render();//showing the output in the browser
  })

})

activeTab = 'members'//default olarak members ekranÄ±nÄ± gÃ¶sterir

function render() 
{
  renderLists()
  if (activeTab === 'members') //members ekranÄ± gÃ¶sterilir
  {
    renderMembers()//showing the output in the browser
  }
  else {
    renderListScreen(activeTab)
    $('#add-task-input').focus();//inputa odaklanÄ±r
  }
  updateListCount()//list count'larÄ± gÃ¼nceller
  writeToLocal()//local storage'a yazdÄ±rma
}

function renderLists() {
  $('#left-list').html('<li class="project-members">&#9734&nbsp;&nbsp;Project Members</li><hr/>')
  for (var listName of Object.keys(todoLists)) 
  {
    $('#left-list').append(` 
  <li class="list-item" data-name="${listName}"> 
  <div class="kare"></div>
  <span  style="font-size: 24px;" id="menu-icon">&#9776</span>
  <span class="list-item-name">${listName}</span>
  <div class="list-actions">
      <span class="trash-button">ğŸ—‘</span>
      <span class="list-count" style="background-color: lightgray; border-radius:100% ;width:22px; text-align:center; margin-right:5px"></span>
    </div>
  </li>
  `)
  }
}

function renderListScreen(listName) //listName'e gÃ¶re tasklarÄ± gÃ¶sterir
{
  var tasks = todoLists[listName];//listName'e gÃ¶re tasklarÄ± alÄ±r
  $('.right-panel').html(`<div>
        <h1 class="list-name" style="color: white"; margin-left: 70px; font-size: 32px;>${listName}</h1>
        <ul id="tasks-list">
            ${tasks.map(renderTaskTemplate)}
        </ul>
        <div class="last">
          <div style="position: relative ; margin-bottom: 40px; ">
          <button id="add-task-button" style ="width:40px; position:relative; background-color: transparent; left:50px; top:5px">
              <span style="font-size:32px;   color: #888;">+ </span>
            </button>
            <input type="text" id="add-task-input" placeholder="Add a task"; font-size: 24px; />
          </div>
        </div></div>`);
}

function renderTaskTemplate(task) 
{
  return `<li class="todo-item">
  <input type="checkbox" class="todo-checkbox" ${task.checked && 'checked'}/> <span ${task.checked && 'class="through"'}>${task.title}</span>
</li>`
}

function renderMembers() {
  $('.right-panel').html(`<div class="projectmembers">
        <p id="star2">&#9734</p>
        <p>Project Members</p>
      </div>
      <div id="students">
        <div class="person">
          <img src="images/can.jpg">
          <div>
            <span>Mustafacan DaÅŸdemir</span>
            <p>Id: 21903303</p>
            <p>Section: 2</p><br>
          </div>
        </div>
        <div class="person">
          <img src="images/ceren.jpeg">
          <div>
            <span>Ceren KoÃ§ak</span>
            <p>Id: 22103619</p>
            <p>Section: 2</p><br>
          </div>
        </div>
    
        <div class="person">
          <img src="./images/fettah.jpeg">
          <div>
            <span>Fettah ElÃ§ik</span>
            <p>Id: 21903182</p>
            <p>Section: 2</p><br>
          </div>
        </div>
        <div class="person">
          <img src="./images/sude.jpeg">
          <div>
            <span>Sude Ayaz</span>
            <p>Id: 22103619</p>
            <p>Section: 2</p>
          </div>
        </div>
    
      </div>`)
}

function createList() {
  var listName = $('#new-list-input').val();//inputtan deÄŸeri alÄ±r
  if (listName) {
    todoLists[listName] = [];//listName'e gÃ¶re boÅŸ bir array oluÅŸturur
    $('#new-list-modal').hide();//modalÄ± gizler
    activeTab = listName;
    render();
  }
}

//modal, kullanÄ±cÄ±ya etkileÅŸimli bir pencere veya diyalog kutusu sunan bir arayÃ¼z Ã¶ÄŸesidir.
//Modal pencereler, genellikle ek bilgi, onay, giriÅŸ veya kullanÄ±cÄ±ya bir seÃ§enek sunma amacÄ±yla kullanÄ±lÄ±r. 


//sonradan deÄŸiÅŸtir
function updateListCount() {
  for (var listName of Object.keys(todoLists)) 
  {
    const count = todoLists[listName].filter(task => !task.checked).length;//checked olmayan tasklarÄ± sayar (checked olanlar gÃ¶sterilmez) Ã–NEMLÄ°!!
    const $listCountSpan = $(`li[data-name='${listName}']`).find('span.list-count');//listName'e gÃ¶re span'Ä± bulur 
    
    // EÄŸer count 0'dan bÃ¼yÃ¼kse gÃ¶rÃ¼nÃ¼rlÃ¼ÄŸÃ¼ ayarla
    if (count > 0) {
        $listCountSpan.css("visibility", "visible");// 0'dan bÃ¼yÃ¼kse gÃ¶rÃ¼nÃ¼r yap
    } else {
        $listCountSpan.css("visibility", "hidden"); // 0 ise gizle
    }

    $listCountSpan.html(count);//count deÄŸerini span'a yazdÄ±rÄ±r
}
}

function createTask() {
  var title = $('#add-task-input').val();//inputtan deÄŸeri alÄ±r
  var listName = $('.list-name').html();//listName'e gÃ¶re boÅŸ bir array oluÅŸturur
  if (title) {
    todoLists[listName].push({ checked: false, title: title })//listName'e gÃ¶re boÅŸ bir array oluÅŸturur
    render();
    $('#add-task-input').val('')//inputu temizler (task ekledikten sonra) Ã–NEMLÄ°!!
  }
}

function checkTask(li) 
{
  var span = $(li).find('span')
  $(span).toggleClass("through")
  var listName = $('.list-name').html()//listName'e gÃ¶re boÅŸ bir array oluÅŸturur
  var taskTitle = $(span).html()
  todoLists[listName] = todoLists[listName].map(task => 
     {
    if (taskTitle != task.title) return task;//taskTitle task.title'a eÅŸit deÄŸilse task'Ä± dÃ¶ndÃ¼r
    return { checked: !task.checked, title: taskTitle } 
  })
  render()
}

//toggle ,iki durum arasÄ±nda geÃ§iÅŸ yapmayÄ± ifade eder. Bu, bir Ã¶ÄŸenin gÃ¶rÃ¼nÃ¼rlÃ¼ÄŸÃ¼nÃ¼ aÃ§mak veya kapatmak, bir durumu etkinleÅŸtirmek veya devre dÄ±ÅŸÄ± bÄ±rakmak gibi iki farklÄ± durum arasÄ±nda geÃ§iÅŸ yapmayÄ± ifade eder. 
//"Toggle" fonksiyonlarÄ±, belirli bir durumu deÄŸiÅŸtirmek veya tersine Ã§evirmek iÃ§in kullanÄ±lÄ±r.
